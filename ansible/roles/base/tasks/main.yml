- name: Installing base packages
  when: ansible_facts['os_family'] == "Debian"
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop: "{{ base_apt_packages }}"

- name: Installing base packages
  when: ansible_facts['distribution'] == "Amazon" or ansible_facts['distribution'] == "CentOS"
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop: "{{ base_yum_packages }}"

- name: Copying chrony template
  ansible.builtin.template:
    src: chrony.j2
    dest: "{{ chrony_path }}"
    owner: root
    group: root
    mode: "644"

- name: Start services
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ service_name }}"

- name: Remove /etc/localtime
  when: ansible_facts['distribution'] == "CentOS" or ansible_facts['distribution'] == "Amazon"
  ansible.builtin.file:
    path: /etc/localtime
    state: absent

- name: Set timezone to {{ time_zone }}
  community.general.system.timezone:
    name: "{{ time_zone }}"
