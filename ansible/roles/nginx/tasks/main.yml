- name: Instaling Nginx
  when: ansible_facts['distribution'] == "CentOS" or ansible_facts['distribution'] == "Fedora"
  ansible.builtin.yum:
    name: nginx
    update_cache: true
    state: present

- name: Instaling Nginx
  when: ansible_facts['distribution'] == "Amazon"
  block:
    - name: Installing linux extras
      ansible.builtin.yum:
        name: amazon-linux-extras
        update_cache: true
        state: present

    - name: Enabling nginx extras
      ansible.builtin.command: amazon-linux-extras enable nginx1
      changed_when: false

    - name: Cleaning metadata
      ansible.builtin.command: yum clean metadata
      changed_when: false

    - name: Installing Nginx
      ansible.builtin.yum:
        name: nginx
        update_cache: true
        state: present

    - name: "Nginx Folders"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "755"
      loop: "{{ nginx_folder }}"


- name: Installing Nginx
  when: ansible_facts['os_family'] == "Debian"
  block:
    - name: Install Nginx
      ansible.builtin.apt:
        name: nginx
        update_cache: true
        state: present

    - name: "Nginx Folders"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: www-data
        group: www-data
        mode: "755"
      loop: "{{ nginx_folder }}"

- name: Main Nginx Config
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "644"
  loop: "{{ nginx_configs }}"

# - name: "Enabling site {{ route53_domain }}"
#   file:
#     src: "/etc/nginx/sites-available/{{ route53_domain}}.conf"
#     dest: "/etc/nginx/sites-enabled/{{ route53_domain}}.conf"
#     owner: root
#     group: root
#     state: link

- name: Remove The Defaut Website
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Restart Nginx Service
